{"ast":null,"code":"var _jsxFileName = \"/home/dexter/my-project/bagaspra16-portfolio/src/components/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Form submission logic would go here\n    // For now, we'll just use the same formspree endpoint\n    // In a real React app, you might use fetch or axios to submit the form\n    const form = e.target;\n    form.submit();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"contact section\",\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact__container bd-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"https://formspree.io/f/meqbqpee\",\n        method: \"POST\",\n        className: \"contact__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          className: \"contact__input\",\n          autoComplete: \"off\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          className: \"contact__input\",\n          autoComplete: \"off\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          cols: \"0\",\n          rows: \"10\",\n          className: \"contact__input\",\n          autoComplete: \"off\",\n          style: {\n            fontFamily: 'Poppins, sans-serif'\n          },\n          placeholder: \"Tell me here...\",\n          value: formData.message,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"contact__button button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"DKbPyhDFM5TCG9ERP013+TK4wwI=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","handleChange","e","value","target","prevState","handleSubmit","preventDefault","form","submit","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","action","method","onSubmit","type","placeholder","autoComplete","onChange","required","cols","rows","style","fontFamily","_c","$RefreshReg$"],"sources":["/home/dexter/my-project/bagaspra16-portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Form submission logic would go here\n    // For now, we'll just use the same formspree endpoint\n    // In a real React app, you might use fetch or axios to submit the form\n    const form = e.target;\n    form.submit();\n  };\n\n  return (\n    <section className=\"contact section\" id=\"contact\">\n      <h2 className=\"section-title\">Contact</h2>\n\n      <div className=\"contact__container bd-grid\">\n        <form \n          action=\"https://formspree.io/f/meqbqpee\" \n          method=\"POST\" \n          className=\"contact__form\"\n          onSubmit={handleSubmit}\n        >\n          <input \n            type=\"text\" \n            name=\"name\" \n            placeholder=\"Name\" \n            className=\"contact__input\" \n            autoComplete=\"off\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n          <input \n            type=\"email\" \n            name=\"email\" \n            placeholder=\"Email\" \n            className=\"contact__input\" \n            autoComplete=\"off\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n          <textarea \n            name=\"message\" \n            cols=\"0\" \n            rows=\"10\" \n            className=\"contact__input\" \n            autoComplete=\"off\" \n            style={{ fontFamily: 'Poppins, sans-serif' }} \n            placeholder=\"Tell me here...\"\n            value={formData.message}\n            onChange={handleChange}\n            required\n          ></textarea>\n          <button type=\"submit\" className=\"contact__button button\">Send</button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}