{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Contact=()=>{const[formData,setFormData]=useState({name:'',email:'',message:''});const handleChange=e=>{const{name,value}=e.target;setFormData(prevState=>({...prevState,[name]:value}));};const handleSubmit=e=>{e.preventDefault();// Form submission logic would go here\n// For now, we'll just use the same formspree endpoint\n// In a real React app, you might use fetch or axios to submit the form\nconst form=e.target;form.submit();};return/*#__PURE__*/_jsxs(\"section\",{className:\"contact section\",id:\"contact\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Contact\"}),/*#__PURE__*/_jsx(\"div\",{className:\"contact__container bd-grid\",children:/*#__PURE__*/_jsxs(\"form\",{action:\"https://formspree.io/f/meqbqpee\",method:\"POST\",className:\"contact__form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Name\",className:\"contact__input\",autoComplete:\"off\",value:formData.name,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",className:\"contact__input\",autoComplete:\"off\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\",cols:\"0\",rows:\"10\",className:\"contact__input\",autoComplete:\"off\",style:{fontFamily:'Poppins, sans-serif'},placeholder:\"Tell me here...\",value:formData.message,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"contact__button button\",children:\"Send\"})]})})]});};export default Contact;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Contact","formData","setFormData","name","email","message","handleChange","e","value","target","prevState","handleSubmit","preventDefault","form","submit","className","id","children","action","method","onSubmit","type","placeholder","autoComplete","onChange","required","cols","rows","style","fontFamily"],"sources":["/home/dexter/my-project/bagaspra16-portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Form submission logic would go here\n    // For now, we'll just use the same formspree endpoint\n    // In a real React app, you might use fetch or axios to submit the form\n    const form = e.target;\n    form.submit();\n  };\n\n  return (\n    <section className=\"contact section\" id=\"contact\">\n      <h2 className=\"section-title\">Contact</h2>\n\n      <div className=\"contact__container bd-grid\">\n        <form \n          action=\"https://formspree.io/f/meqbqpee\" \n          method=\"POST\" \n          className=\"contact__form\"\n          onSubmit={handleSubmit}\n        >\n          <input \n            type=\"text\" \n            name=\"name\" \n            placeholder=\"Name\" \n            className=\"contact__input\" \n            autoComplete=\"off\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n          <input \n            type=\"email\" \n            name=\"email\" \n            placeholder=\"Email\" \n            className=\"contact__input\" \n            autoComplete=\"off\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n          <textarea \n            name=\"message\" \n            cols=\"0\" \n            rows=\"10\" \n            className=\"contact__input\" \n            autoComplete=\"off\" \n            style={{ fontFamily: 'Poppins, sans-serif' }} \n            placeholder=\"Tell me here...\"\n            value={formData.message}\n            onChange={handleChange}\n            required\n          ></textarea>\n          <button type=\"submit\" className=\"contact__button button\">Send</button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACvCQ,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACX,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEJ,IAAI,CAAEK,KAAM,CAAC,CAAGD,CAAC,CAACE,MAAM,CAChCP,WAAW,CAACQ,SAAS,GAAK,CACxB,GAAGA,SAAS,CACZ,CAACP,IAAI,EAAGK,KACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAG,YAAY,CAAIJ,CAAC,EAAK,CAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB;AACA;AACA;AACA,KAAM,CAAAC,IAAI,CAAGN,CAAC,CAACE,MAAM,CACrBI,IAAI,CAACC,MAAM,CAAC,CAAC,CACf,CAAC,CAED,mBACEf,KAAA,YAASgB,SAAS,CAAC,iBAAiB,CAACC,EAAE,CAAC,SAAS,CAAAC,QAAA,eAC/CpB,IAAA,OAAIkB,SAAS,CAAC,eAAe,CAAAE,QAAA,CAAC,SAAO,CAAI,CAAC,cAE1CpB,IAAA,QAAKkB,SAAS,CAAC,4BAA4B,CAAAE,QAAA,cACzClB,KAAA,SACEmB,MAAM,CAAC,iCAAiC,CACxCC,MAAM,CAAC,MAAM,CACbJ,SAAS,CAAC,eAAe,CACzBK,QAAQ,CAAET,YAAa,CAAAM,QAAA,eAEvBpB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXlB,IAAI,CAAC,MAAM,CACXmB,WAAW,CAAC,MAAM,CAClBP,SAAS,CAAC,gBAAgB,CAC1BQ,YAAY,CAAC,KAAK,CAClBf,KAAK,CAAEP,QAAQ,CAACE,IAAK,CACrBqB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACT,CAAC,cACF5B,IAAA,UACEwB,IAAI,CAAC,OAAO,CACZlB,IAAI,CAAC,OAAO,CACZmB,WAAW,CAAC,OAAO,CACnBP,SAAS,CAAC,gBAAgB,CAC1BQ,YAAY,CAAC,KAAK,CAClBf,KAAK,CAAEP,QAAQ,CAACG,KAAM,CACtBoB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACT,CAAC,cACF5B,IAAA,aACEM,IAAI,CAAC,SAAS,CACduB,IAAI,CAAC,GAAG,CACRC,IAAI,CAAC,IAAI,CACTZ,SAAS,CAAC,gBAAgB,CAC1BQ,YAAY,CAAC,KAAK,CAClBK,KAAK,CAAE,CAAEC,UAAU,CAAE,qBAAsB,CAAE,CAC7CP,WAAW,CAAC,iBAAiB,CAC7Bd,KAAK,CAAEP,QAAQ,CAACI,OAAQ,CACxBmB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACC,CAAC,cACZ5B,IAAA,WAAQwB,IAAI,CAAC,QAAQ,CAACN,SAAS,CAAC,wBAAwB,CAAAE,QAAA,CAAC,MAAI,CAAQ,CAAC,EAClE,CAAC,CACJ,CAAC,EACC,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}